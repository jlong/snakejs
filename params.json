{"name":"Snake.js","tagline":"The lightweight querySelector and events library perfectly suited for widgets and simple applications or websites. Supports IE8+","body":"### Selecting elements\r\n\r\nThe $ function (aka snake function) can be used as a cross-browser querySelector(). Compared to jQuery the functionality it supports is quite limited, but it works well for some applications.\r\n\r\nIn its simplest form it only looks up divs by a class name:\r\n\r\n    $('content')                // Find a div with a class of 'content'\r\n\r\nBut you can also pass a specific tag to find other types of tags:\r\n\r\n    $('a', 'external')          // Find a link with a class of 'external'\r\n\r\nIt can also be invoked on an element to find child elements:\r\n\r\n    $(el, 'post')               // Find a div with a class of 'post' inside of el\r\n    $(el, 'article', 'post')    // Find an article tag with a class of 'post' inside of el\r\n\r\nThe $.all function is similar to the $ function except that much like querySelectorAll() it returns an array of matching elements. In the event that no elements are found an empty array is returned.\r\n\r\nThe $.all function supports the same parameters as the $ function:\r\n\r\n    $.all('post')               // All divs with a class name of 'post'\r\n    $.all(el, 'post')           // All 'post' divs inside of el\r\n\r\n    $.all('a', 'external')      // All links with a class name of 'external'\r\n    $.all(el, 'a', 'external')  // All 'external' links inside of el\r\n\r\n\r\n### Retreiving IDs\r\n\r\nThe $.identify function can be used to obtain an ID for a given element:\r\n\r\n    var el = document.createElement('div');\r\n    el.id = 'main';\r\n    $.identify(el);   // => 'main'\r\n\r\nIf the element doesn't have an ID, One will be generated for it. For instance:\r\n\r\n    var el = document.createElement('div');\r\n    $.identify(el);   // => 'snakejs-1'\r\n\r\n\r\n### Storing data\r\n\r\nThe $.data function can be used to associate and retrieve artitrary data with an element. The data is stored in a global object and associated by the ID of the element. If the element does not have an ID, the $.identify function is used to ensure that it does.\r\n\r\nTo store data for an element, pass in a key and value:\r\n\r\n    $.data(el, 'tooltip', 'An example tooltip.');\r\n\r\nTo retrieve data for an element, simply pass in the key:\r\n\r\n    $.data(el, 'tooltip'); // => \"An example tooltip.\"\r\n\r\n\r\n### Adding, removing, and testing classes\r\n\r\nUse the $.addClass function to add a class to an element:\r\n\r\n    $.addClass(el, 'is-hidden');\r\n\r\nUse the $.removeClass function to remove a class from an element:\r\n\r\n    $.removeClass(el, 'is-hidden');\r\n\r\nUse the $.hasClass function to test if an element has a class:\r\n\r\n    if ($.hasClass(el, 'is-hidden') {\r\n       // el is hidden\r\n    }\r\n\r\n\r\n### Getting dimensions and offset\r\n\r\nUse the $.dimensions function to retreive the width and height of an element. This function should work even if the element is invisible. Just call:\r\n\r\n    $.dimensions(el)  // => { width: 200, height: 100 }\r\n\r\nUse the $.offset function to get an element's coordinates relative to the entire page:\r\n\r\n    $.offset(el)      // => { top: 10, left: 20 }\r\n\r\n\r\n### Adding and removing Events\r\n\r\nUse the $.on function to add an event listener to an element. For example:\r\n\r\n    $.on(el, 'click', function(e) {\r\n      console.log('clicked');\r\n    });\r\n\r\nUse the $.off function to remove an event listener from an element:\r\n\r\n    var listener = function() { ... };\r\n    $.on(el, 'click', listener);\r\n    $.off(el, 'click', listener);\r\n\r\nUse the $.one to add an event listener that will be removed the first time it is invoked:\r\n\r\n    $.one(el, 'mousemove', function(e) {\r\n      console.log('This should only ever be logged one time.');\r\n    });\r\n\r\n\r\n### DOM ready\r\n\r\nUse the $.ready function to add a DOM ready event listener. This listener will be fired when the DOM has been fully loaded.\r\n\r\n    $.ready(function() {\r\n      console.log('The DOM is loaded!');\r\n    });","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}